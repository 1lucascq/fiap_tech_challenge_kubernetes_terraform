name: Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["Terraform | Create Infra AWS"]
    types:
      - completed
    branches:
      - master
  push:
    branches:
      - master
    paths:
      - 'k8s/**'
  pull_request:
    branches:
      - master
    paths:
      - 'k8s/**'
  workflow_dispatch:

env:
  REGION_DEFAULT: us-east-1
  CLUSTER_NAME: tc-fiap

jobs:
  deploy-k8s:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

    #   - name: Setup Terraform (to get outputs)
    #     uses: hashicorp/setup-terraform@v3
    #     with:
    #       terraform_version: 1.5.0

    #   - name: Get EKS cluster info
    #     working-directory: ./terraform
    #     run: |
    #       terraform init
    #       echo "CLUSTER_NAME=$(terraform output -raw cluster_name)" >> $GITHUB_ENV
    #       echo "CLUSTER_ENDPOINT=$(terraform output -raw cluster_endpoint)" >> $GITHUB_ENV

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region ${{ env.REGION_DEFAULT }} --name ${{ env.CLUSTER_NAME }}

      - name: Deploy Kubernetes manifests
        run: |
            if [ -d "k8s/app/namespaces" ]; then
                kubectl apply -f k8s/app/namespaces/ --recursive
            fi
            
            if [ -d "k8s/configmap" ]; then
                kubectl apply -f k8s/configmap/ --recursive
            fi
            
            if [ -d "k8s/secrets" ]; then
                kubectl apply -f k8s/secrets/ --recursive
            fi
            
            if [ -d "k8s/app/deployments" ]; then
                kubectl apply -f k8s/app/deployments/ --recursive
            fi
            
            if [ -d "k8s/app/services" ]; then
                kubectl apply -f k8s/app/services/ --recursive
            fi
            
            if [ -d "k8s/app/hpa" ]; then
                kubectl apply -f k8s/app/hpa/ --recursive
            fi

            if [ -d "k8s/jobs/db-migrations" ]; then
                kubectl apply -f k8s/jobs/db-migrations/ --recursive
            fi

      - name: Verify deployment
        run: |
          kubectl get pods -A
          kubectl get services -A