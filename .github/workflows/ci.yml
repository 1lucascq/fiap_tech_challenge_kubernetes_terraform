name: Complete CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  REGION_DEFAULT: us-east-1

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ./terraform
        run: |
          terraform init -backend=false
          terraform validate

  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Deploy Infrastructure
        working-directory: ./terraform
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve

  deploy-application:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.REGION_DEFAULT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Get cluster info and deploy
        run: |
          cd terraform
          terraform init
          CLUSTER_NAME=$(terraform output -raw cluster_name)
          
          # Configure kubectl
          aws eks update-kubeconfig --region ${{ env.REGION_DEFAULT }} --name $CLUSTER_NAME
          
          # Deploy applications
          kubectl apply -f k8s/ --recursive || kubectl apply -f kubernetes/ --recursive
          
          # Verify deployment
          kubectl get all -A